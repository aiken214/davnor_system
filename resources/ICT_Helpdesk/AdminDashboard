// resources/js/Pages/Tickets/AdminDashboard.tsx

import { Link, router, usePage } from '@inertiajs/react';
import React, { useState } from 'react';

export default function AdminDashboard({ tickets, filters, categories, staff }: { tickets: any[], filters: any, categories: any[], staff: any[] }) {
    const [status, setStatus] = useState(filters.status || '');
    const [priority, setPriority] = useState(filters.priority || '');
    const [categoryId, setCategoryId] = useState(filters.category_id || '');

    const handleFilter = () => {
        router.get('/admin/tickets', { status, priority, category_id: categoryId }, { preserveState: true });
    };

    const handleAssign = (ticketId: number, userId: string) => {
        router.post(`/admin/tickets/${ticketId}/assign`, { user_id: userId }, {
            preserveScroll: true,
            onSuccess: () => console.log('Assigned successfully'),
        });
    };

    return (
        <div className="max-w-6xl mx-auto p-4">
            <h1 className="text-2xl font-bold mb-4">ICT Helpdesk - Admin Dashboard</h1>

            <div className="flex flex-wrap gap-4 mb-6">
                <select value={status} onChange={e => setStatus(e.target.value)} className="border px-2 py-1 rounded">
                    <option value="">All Statuses</option>
                    <option value="open">Open</option>
                    <option value="in_progress">In Progress</option>
                    <option value="resolved">Resolved</option>
                    <option value="closed">Closed</option>
                </select>
                <select value={priority} onChange={e => setPriority(e.target.value)} className="border px-2 py-1 rounded">
                    <option value="">All Priorities</option>
                    <option value="low">Low</option>
                    <option value="medium">Medium</option>
                    <option value="high">High</option>
                </select>
                <select value={categoryId} onChange={e => setCategoryId(e.target.value)} className="border px-2 py-1 rounded">
                    <option value="">All Categories</option>
                    {categories.map((cat: any) => (
                        <option key={cat.id} value={cat.id}>{cat.name}</option>
                    ))}
                </select>
                <button onClick={handleFilter} className="bg-blue-600 text-white px-4 py-1 rounded hover:bg-blue-700">
                    Filter
                </button>
            </div>

            <table className="w-full border">
                <thead>
                    <tr className="bg-gray-200">
                        <th className="border px-3 py-2 text-left">#</th>
                        <th className="border px-3 py-2 text-left">Subject</th>
                        <th className="border px-3 py-2 text-left">Category</th>
                        <th className="border px-3 py-2 text-left">Priority</th>
                        <th className="border px-3 py-2 text-left">Status</th>
                        <th className="border px-3 py-2 text-left">Submitted By</th>
                        <th className="border px-3 py-2 text-left">Assigned To</th>
                        <th className="border px-3 py-2 text-left">Action</th>
                    </tr>
                </thead>
                <tbody>
                    {tickets.map((ticket: any, idx: number) => (
                        <tr key={ticket.id} className="hover:bg-gray-100">
                            <td className="border px-3 py-2">{idx + 1}</td>
                            <td className="border px-3 py-2">{ticket.subject}</td>
                            <td className="border px-3 py-2">{ticket.category?.name}</td>
                            <td className="border px-3 py-2 capitalize">{ticket.priority}</td>
                            <td className="border px-3 py-2 uppercase font-semibold text-sm">{ticket.status}</td>
                            <td className="border px-3 py-2">{ticket.user?.name}</td>
                            <td className="border px-3 py-2">
                                <select
                                    value={ticket.assigned_to_id || ''}
                                    onChange={(e) => handleAssign(ticket.id, e.target.value)}
                                    className="border px-2 py-1 rounded"
                                >
                                    <option value="">Unassigned</option>
                                    {staff.map((s: any) => (
                                        <option key={s.id} value={s.id}>{s.name}</option>
                                    ))}
                                </select>
                            </td>
                            <td className="border px-3 py-2">
                                <Link
                                    href={`/tickets/${ticket.id}`}
                                    className="text-blue-600 hover:underline"
                                >
                                    View
                                </Link>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
}
